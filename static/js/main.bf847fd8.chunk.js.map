{"version":3,"sources":["utils/index.js","store/usersSlice.js","components/Employees/Employee.js","components/Employees/Employees.js","components/EmployeesBirthday/Month.js","components/EmployeesBirthday/EmployeesBirthday.js","App.js","hooks/index.js","store/index.js","index.js"],"names":["formatBirthDate","date","Date","name","Intl","DateTimeFormat","month","format","getDate","getFullYear","sortByLastAndFirstName","a","b","lastName","firstName","getAlphabet","split","months","getMonth","list","monthName","Array","keys","map","i","monthId","monthList","m","users","concat","splice","getUsers","createAsyncThunk","axios","get","response","data","sort","savedSelectedUsers","window","localStorage","getItem","length","selected","JSON","parse","monthsState","selectedUsers","filter","u","includes","id","setItem","stringify","monthsNew","reduce","arr","user","monthIndex","findIndex","dob","console","log","usersAdapter","createEntityAdapter","selectUsers","getSelectors","state","selectAll","usersSlice","createSlice","initialState","getInitialState","reducers","selectedAdd","action","push","payload","selectedRemove","extraReducers","fulfilled","setAll","actions","subHeader","fontWeight","fontSize","margin","Employee","dispatch","useDispatch","useSelector","useState","active","setActive","handleRadioChange","style","color","type","checked","onChange","header","textAlign","flexContainer","display","flexWrap","borderRight","Letter","letter","minWidth","Employees","letters","setLetters","useEffect","l","Month","divider","width","borderTop","marginBottom","EmployeesBirthday","marginTop","App","windowWidth","isClient","lastWidth","useRef","getWidthBP","innerWidth","setWindowWidth","handleResize","current","addEventListener","removeEventListener","useWindowWidthBP","className","height","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.bf847fd8.chunk.js","sourcesContent":["const monthList = () => {\r\n  const monthName = new Intl.DateTimeFormat('en', { month: 'long' })\r\n  return [...Array(12).keys()].map((i) => ({\r\n    monthId: i,\r\n    name: monthName.format(new Date(1970, i)),\r\n  }))\r\n}\r\n\r\nconst formatBirthDate = (date) => {\r\n  if (typeof date === 'string') date = new Date(date)\r\n  const name = new Intl.DateTimeFormat('en', { month: 'long' }).format(date)\r\n  return `${date.getDate()} ${name}, ${date.getFullYear()} year`\r\n}\r\n\r\nconst sortByLastAndFirstName = (a, b) => {\r\n  if (a.lastName === b.lastName) return a.firstName > b.firstName ? 1 : -1\r\n  return a.lastName > b.lastName ? 1 : -1\r\n}\r\n\r\nconst getAlphabet = () => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\r\n\r\nexport { monthList, formatBirthDate, sortByLastAndFirstName, getAlphabet }\r\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport { monthList, sortByLastAndFirstName } from '../utils'\r\n\r\nconst usersUrl =\r\n  'https://yalantis-react-school-api.yalantis.com/api/task0/users'\r\n\r\nconst months = (() => {\r\n  const month = new Date().getMonth()\r\n  const list = monthList().map((m) => ({ ...m, users: [] }))\r\n  return list.concat(list.splice(0, month))\r\n})()\r\n\r\nexport const getUsers = createAsyncThunk('users/list', async () => {\r\n  try {\r\n    const response = await axios.get(usersUrl)\r\n    const data = await response.data\r\n    const users = data.sort(sortByLastAndFirstName)\r\n\r\n    const savedSelectedUsers = window.localStorage.getItem('YTappSelectedUsers')\r\n\r\n    if (savedSelectedUsers?.length > 0) {\r\n      const selected = JSON.parse(savedSelectedUsers)\r\n      const monthsState = months.map((m) => ({ ...m })) // nested copy\r\n      const selectedUsers = users.filter((u) => selected.includes(u.id))\r\n\r\n      // in case earlier saved user is no longer fetched from endpoint\r\n      if (selectedUsers.length < selected.length)\r\n        window.localStorage.setItem(\r\n          'YTappSelectedUsers',\r\n          JSON.stringify(selectedUsers.map((u) => u.id))\r\n        )\r\n\r\n      const monthsNew = selectedUsers\r\n        .reduce((arr, user) => {\r\n          const monthIndex = arr.findIndex(\r\n            (m) => m.monthId === new Date(user.dob).getMonth()\r\n          )\r\n          arr[monthIndex].users = arr[monthIndex].users.concat(user)\r\n          return arr\r\n        }, monthsState)\r\n        .map((m) => {\r\n          if (m.users.length > 1) {\r\n            m.users.sort(sortByLastAndFirstName)\r\n          }\r\n          return m\r\n        })\r\n\r\n      return { users, selected, months: monthsNew }\r\n    }\r\n\r\n    return { users }\r\n  } catch (e) {\r\n    console.log('Error fetching users list: ', e)\r\n    return { users: [] }\r\n  }\r\n})\r\n\r\nconst usersAdapter = createEntityAdapter({})\r\n\r\nexport const { selectAll: selectUsers } = usersAdapter.getSelectors(\r\n  (state) => state.users\r\n)\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState: usersAdapter.getInitialState({\r\n    selected: [],\r\n    months: months,\r\n  }),\r\n  reducers: {\r\n    selectedAdd: (state, action) => {\r\n      state.selected.push(action.payload.id)\r\n      const monthIndex = state.months.findIndex(\r\n        (m) => m.monthId === new Date(action.payload.dob).getMonth()\r\n      )\r\n      state.months[monthIndex].users = state.months[monthIndex].users\r\n        .concat(action.payload)\r\n        .sort(sortByLastAndFirstName)\r\n      window.localStorage.setItem(\r\n        'YTappSelectedUsers',\r\n        JSON.stringify(state.selected)\r\n      )\r\n    },\r\n    selectedRemove: (state, action) => {\r\n      state.selected = state.selected.filter((id) => id !== action.payload.id)\r\n      const monthIndex = state.months.findIndex(\r\n        (m) => m.monthId === new Date(action.payload.dob).getMonth()\r\n      )\r\n      state.months[monthIndex].users = state.months[monthIndex].users.filter(\r\n        (user) => user.id !== action.payload.id\r\n      )\r\n      window.localStorage.setItem(\r\n        'YTappSelectedUsers',\r\n        JSON.stringify(state.selected)\r\n      )\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getUsers.fulfilled]: (state, action) => {\r\n      usersAdapter.setAll(state, action.payload.users)\r\n      if (action.payload.selected) {\r\n        state.selected = action.payload.selected\r\n        state.months = action.payload.months\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nexport const { selectedAdd, selectedRemove } = usersSlice.actions\r\n\r\nexport default usersSlice.reducer\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { selectedAdd, selectedRemove } from '../../store/usersSlice'\r\n\r\nconst subHeader = {\r\n  fontWeight: 'bold',\r\n  fontSize: '1em',\r\n  margin: '1em 0 0.5em',\r\n}\r\n\r\nconst Employee = ({ user }) => {\r\n  const dispatch = useDispatch()\r\n  const selectedUsers = useSelector(({ users }) => users.selected)\r\n  const [active, setActive] = useState(() => selectedUsers.includes(user.id))\r\n  const handleRadioChange = () => {\r\n    setActive((state) => !state)\r\n    dispatch(active ? selectedRemove(user) : selectedAdd(user))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={active ? { ...subHeader, color: 'blue' } : subHeader}>\r\n        {user.lastName} {user.firstName}\r\n      </div>\r\n\r\n      <div>\r\n        <div>\r\n          <input type=\"radio\" checked={!active} onChange={handleRadioChange} />\r\n          not active\r\n        </div>\r\n        <div>\r\n          <input type=\"radio\" checked={active} onChange={handleRadioChange} />\r\n          active\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Employee\r\n\r\nEmployee.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUsers } from '../../store/usersSlice'\r\nimport { getAlphabet } from '../../utils'\r\nimport Employee from './Employee'\r\n\r\nconst header = {\r\n  fontWeight: 'bold',\r\n  fontSize: '1.5em',\r\n  margin: '0.5em 0 2.5em',\r\n  textAlign: 'center',\r\n}\r\n\r\nconst subHeader = {\r\n  fontWeight: 'bold',\r\n  fontSize: '1em',\r\n  margin: '0.5em 0',\r\n}\r\n\r\nconst flexContainer = {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  borderRight: '2px solid lightgray',\r\n}\r\n\r\nconst Letter = ({ letter, users }) => (\r\n  <div style={{ margin: '0 1em 2em', minWidth: '7.5em' }}>\r\n    <div style={subHeader}>{letter}</div>\r\n    {users?.length > 0\r\n      ? users.map((user) => <Employee user={user} key={user.id} />)\r\n      : '-----'}\r\n  </div>\r\n)\r\n\r\nconst Employees = () => {\r\n  const users = useSelector(selectUsers)\r\n  const [letters, setLetters] = useState(getAlphabet)\r\n\r\n  useEffect(() => {\r\n    if (users.length > 0) {\r\n      setLetters(\r\n        users.reduce(\r\n          (arr, user) =>\r\n            arr.map((l) =>\r\n              l.letter === user.lastName[0]\r\n                ? { ...l, users: [...l.users, user] }\r\n                : l\r\n            ),\r\n          getAlphabet().map((l) => ({ letter: l, users: [] }))\r\n        )\r\n      )\r\n    }\r\n  }, [users])\r\n\r\n  return (\r\n    <div>\r\n      <div style={header}>Employees</div>\r\n      <div style={flexContainer}>\r\n        {users.length > 0\r\n          ? letters.map((l, i) => (\r\n              <Letter letter={l.letter} users={l.users} key={i} />\r\n            ))\r\n          : 'no users found'}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Employees\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { formatBirthDate } from '../../utils'\r\n\r\nconst subHeader = {\r\n  fontWeight: 'bold',\r\n  fontSize: '1em',\r\n  margin: '0.5em 0',\r\n}\r\n\r\nconst Month = ({ name, users }) => (\r\n  <div style={{ margin: '2.5em' }}>\r\n    <div style={subHeader}>{name}</div>\r\n    <ul>\r\n      {users.map((u) => (\r\n        <li key={u.id}>\r\n          {u.lastName} {u.firstName} - {formatBirthDate(u.dob)}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default Month\r\n\r\nMonth.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Month from './Month'\r\n\r\nconst header = {\r\n  fontWeight: 'bold',\r\n  fontSize: '1.5em',\r\n  margin: '0.5em 0 2.5em',\r\n  textAlign: 'center',\r\n}\r\n\r\nconst divider = {\r\n  width: '75%',\r\n  borderTop: '2px solid lightgray',\r\n  textAlign: 'center',\r\n  marginBottom: '2em',\r\n}\r\n\r\nconst EmployeesBirthday = () => {\r\n  const months = useSelector(({ users }) => users.months)\r\n  const selectedUsers = useSelector(({ users }) => users.selected)\r\n\r\n  return (\r\n    <div>\r\n      <div style={header}>Employees birthday</div>\r\n      <div>\r\n        <hr style={divider} />\r\n        {/* I don't like what prettier did to the part below (╥﹏╥) */}\r\n        {selectedUsers.length > 0 ? (\r\n          months.map(\r\n            (m) =>\r\n              m.users.length > 0 && (\r\n                <Month name={m.name} users={m.users} key={m.monthId} />\r\n              )\r\n          )\r\n        ) : (\r\n          <div style={{ margin: '2.5em' }}>Employees List is empty</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeesBirthday\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Employees from './components/Employees/Employees'\r\nimport EmployeesBirthday from './components/EmployeesBirthday/EmployeesBirthday'\r\nimport { getUsers, selectUsers } from './store/usersSlice'\r\nimport { useWindowWidthBP } from './hooks'\r\n\r\nconst divider = {\r\n  width: '50%',\r\n  borderTop: '2px solid lightgray',\r\n  textAlign: 'center',\r\n  marginTop: '7em',\r\n}\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector(selectUsers)\r\n  const windowWidth = useWindowWidthBP()\r\n\r\n  useEffect(() => {\r\n    if (users.length === 0) dispatch(getUsers({}))\r\n  }, [users])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\" style={{ width: '100%', display: 'flex' }}>\r\n        <div style={{ width: windowWidth >= 600 ? '60%' : '50%' }}>\r\n          <Employees />\r\n        </div>\r\n        <div\r\n          style={{ borderRight: '2px solid lightgray', height: '100%' }}\r\n        ></div>\r\n        <div style={{ width: windowWidth >= 600 ? '40%' : '50%' }}>\r\n          <EmployeesBirthday />\r\n        </div>\r\n      </div>\r\n      <hr style={divider} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const useWindowWidthBP = () => {\r\n  const isClient = typeof window === 'object'\r\n  const lastWidth = useRef()\r\n\r\n  const getWidthBP = () => {\r\n    if (!isClient) return undefined\r\n    if (window.innerWidth >= 1920) return 1920\r\n    if (window.innerWidth >= 1280) return 1280\r\n    if (window.innerWidth >= 960) return 960\r\n    if (window.innerWidth >= 600) return 600\r\n    if (window.innerWidth >= 0) return 0\r\n  }\r\n\r\n  const [windowWidth, setWindowWidth] = useState(getWidthBP)\r\n\r\n  useEffect(() => {\r\n    if (!isClient) return false\r\n\r\n    const handleResize = () => {\r\n      if (window?.innerWidth !== lastWidth.current) {\r\n        const width = getWidthBP()\r\n        lastWidth.current = width\r\n        setWindowWidth(width)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  })\r\n\r\n  return windowWidth\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport usersSlice from './usersSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    users: usersSlice,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}